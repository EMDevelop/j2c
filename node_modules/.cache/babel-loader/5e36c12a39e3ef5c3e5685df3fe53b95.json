{"ast":null,"code":"var _jsxFileName = \"/Users/EdsMac/Desktop/just2connect/just2connect/src/components/divjoy/Section.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport BackgroundImage from \"./BackgroundImage\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { emphasize } from \"@material-ui/core/styles/colorManipulator\";\nimport capitalize from \"@material-ui/core/utils/capitalize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: \"relative\",\n    // Ensure child <Container> is above background\n    // image (if one is set with the bgImage prop).\n    \"& > .MuiContainer-root\": {\n      position: \"relative\"\n    }\n  },\n  // Create color classes that set background color and determine\n  // text color and dividing border automatically based on background color.\n  // Adds the keys colorDefault, colorLight, etc\n  ...[[\"default\", theme.palette.background.default], [\"light\", emphasize(theme.palette.background.default, 0.03)], [\"primary\", theme.palette.primary.main], [\"secondary\", theme.palette.secondary.main]].reduce((acc, [name, value]) => {\n    acc[`color${capitalize(name)}`] = {\n      backgroundColor: value,\n      // Ensure text is legible on background\n      color: theme.palette.getContrastText(value),\n      // Sibling selector that adds a top border if section above\n      // has the same color class.\n      // We use emphasize to compute border based on background color\n      // and make sure it's always lightly visible.\n      [`& + &`]: {\n        borderTop: `1px solid ${emphasize(value, 0.09)}`\n      }\n    };\n    return acc;\n  }, {}),\n  colorInherit: {\n    color: \"inherit\"\n  },\n  colorTransparent: {\n    backgroundColor: \"transparent\",\n    color: \"inherit\"\n  }\n}));\n\nfunction Section(props) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    bgColor = \"default\",\n    bgImage,\n    bgImageOpacity,\n    size = \"normal\",\n    className,\n    children,\n    ...otherProps\n  } = props; // Get MUI responsize size object based\n  // on size prop (normal, medium, large, auto)\n\n  const verticalPadding = {\n    normal: {\n      xs: 3\n    },\n    medium: {\n      xs: 6,\n      sm: 10\n    },\n    large: {\n      xs: 6,\n      sm: 20\n    },\n    auto: 0\n  }[size];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"section\",\n    py: verticalPadding,\n    className: classes.root + ` ${classes[`color${capitalize(bgColor)}`]}` + (className ? ` ${className}` : \"\"),\n    ...otherProps,\n    children: [bgImage && /*#__PURE__*/_jsxDEV(BackgroundImage, {\n      image: bgImage,\n      opacity: bgImageOpacity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }, this), props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Section, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Section;\nexport default Section;\n\nvar _c;\n\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"sources":["/Users/EdsMac/Desktop/just2connect/just2connect/src/components/divjoy/Section.js"],"names":["React","Box","BackgroundImage","makeStyles","emphasize","capitalize","useStyles","theme","root","position","palette","background","default","primary","main","secondary","reduce","acc","name","value","backgroundColor","color","getContrastText","borderTop","colorInherit","colorTransparent","Section","props","classes","bgColor","bgImage","bgImageOpacity","size","className","children","otherProps","verticalPadding","normal","xs","medium","sm","large","auto"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,2CAA1B;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJ;AACA;AACA,8BAA0B;AACxBA,MAAAA,QAAQ,EAAE;AADc;AAJtB,GADiC;AAUvC;AACA;AACA;AACA,KAAG,CACD,CAAC,SAAD,EAAYF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,OAArC,CADC,EAED,CAAC,OAAD,EAAUR,SAAS,CAACG,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyBC,OAA1B,EAAmC,IAAnC,CAAnB,CAFC,EAGD,CAAC,SAAD,EAAYL,KAAK,CAACG,OAAN,CAAcG,OAAd,CAAsBC,IAAlC,CAHC,EAID,CAAC,WAAD,EAAcP,KAAK,CAACG,OAAN,CAAcK,SAAd,CAAwBD,IAAtC,CAJC,EAKDE,MALC,CAKM,CAACC,GAAD,EAAM,CAACC,IAAD,EAAOC,KAAP,CAAN,KAAwB;AAC/BF,IAAAA,GAAG,CAAE,QAAOZ,UAAU,CAACa,IAAD,CAAO,EAA1B,CAAH,GAAkC;AAChCE,MAAAA,eAAe,EAAED,KADe;AAEhC;AACAE,MAAAA,KAAK,EAAEd,KAAK,CAACG,OAAN,CAAcY,eAAd,CAA8BH,KAA9B,CAHyB;AAIhC;AACA;AACA;AACA;AACA,OAAE,OAAF,GAAW;AACTI,QAAAA,SAAS,EAAG,aAAYnB,SAAS,CAACe,KAAD,EAAQ,IAAR,CAAc;AADtC;AARqB,KAAlC;AAYA,WAAOF,GAAP;AACD,GAnBE,EAmBA,EAnBA,CAboC;AAkCvCO,EAAAA,YAAY,EAAE;AACZH,IAAAA,KAAK,EAAE;AADK,GAlCyB;AAsCvCI,EAAAA,gBAAgB,EAAE;AAChBL,IAAAA,eAAe,EAAE,aADD;AAEhBC,IAAAA,KAAK,EAAE;AAFS;AAtCqB,CAAZ,CAAD,CAA5B;;AA4CA,SAASK,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;AAEA,QAAM;AACJuB,IAAAA,OAAO,GAAG,SADN;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA,IAAI,GAAG,QAJH;AAKJC,IAAAA,SALI;AAMJC,IAAAA,QANI;AAOJ,OAAGC;AAPC,MAQFR,KARJ,CAHsB,CAatB;AACA;;AACA,QAAMS,eAAe,GAAG;AACtBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAE;AAAN,KADc;AAEtBC,IAAAA,MAAM,EAAE;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASE,MAAAA,EAAE,EAAE;AAAb,KAFc;AAGtBC,IAAAA,KAAK,EAAE;AAAEH,MAAAA,EAAE,EAAE,CAAN;AAASE,MAAAA,EAAE,EAAE;AAAb,KAHe;AAItBE,IAAAA,IAAI,EAAE;AAJgB,IAKtBV,IALsB,CAAxB;AAOA,sBACE,QAAC,GAAD;AACE,IAAA,SAAS,EAAC,SADZ;AAEE,IAAA,EAAE,EAAEI,eAFN;AAGE,IAAA,SAAS,EACPR,OAAO,CAACpB,IAAR,GACC,IAAGoB,OAAO,CAAE,QAAOvB,UAAU,CAACwB,OAAD,CAAU,EAA7B,CAAgC,EAD3C,IAECI,SAAS,GAAI,IAAGA,SAAU,EAAjB,GAAqB,EAF/B,CAJJ;AAAA,OAQME,UARN;AAAA,eAUGL,OAAO,iBAAI,QAAC,eAAD;AAAiB,MAAA,KAAK,EAAEA,OAAxB;AAAiC,MAAA,OAAO,EAAEC;AAA1C;AAAA;AAAA;AAAA;AAAA,YAVd,EAYGJ,KAAK,CAACO,QAZT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAtCQR,O;UACSpB,S;;;KADToB,O;AAwCT,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport BackgroundImage from \"./BackgroundImage\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { emphasize } from \"@material-ui/core/styles/colorManipulator\";\nimport capitalize from \"@material-ui/core/utils/capitalize\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"relative\",\n    // Ensure child <Container> is above background\n    // image (if one is set with the bgImage prop).\n    \"& > .MuiContainer-root\": {\n      position: \"relative\",\n    },\n  },\n\n  // Create color classes that set background color and determine\n  // text color and dividing border automatically based on background color.\n  // Adds the keys colorDefault, colorLight, etc\n  ...[\n    [\"default\", theme.palette.background.default],\n    [\"light\", emphasize(theme.palette.background.default, 0.03)],\n    [\"primary\", theme.palette.primary.main],\n    [\"secondary\", theme.palette.secondary.main],\n  ].reduce((acc, [name, value]) => {\n    acc[`color${capitalize(name)}`] = {\n      backgroundColor: value,\n      // Ensure text is legible on background\n      color: theme.palette.getContrastText(value),\n      // Sibling selector that adds a top border if section above\n      // has the same color class.\n      // We use emphasize to compute border based on background color\n      // and make sure it's always lightly visible.\n      [`& + &`]: {\n        borderTop: `1px solid ${emphasize(value, 0.09)}`,\n      },\n    };\n    return acc;\n  }, {}),\n\n  colorInherit: {\n    color: \"inherit\",\n  },\n\n  colorTransparent: {\n    backgroundColor: \"transparent\",\n    color: \"inherit\",\n  },\n}));\n\nfunction Section(props) {\n  const classes = useStyles();\n\n  const {\n    bgColor = \"default\",\n    bgImage,\n    bgImageOpacity,\n    size = \"normal\",\n    className,\n    children,\n    ...otherProps\n  } = props;\n\n  // Get MUI responsize size object based\n  // on size prop (normal, medium, large, auto)\n  const verticalPadding = {\n    normal: { xs: 3 },\n    medium: { xs: 6, sm: 10 },\n    large: { xs: 6, sm: 20 },\n    auto: 0,\n  }[size];\n\n  return (\n    <Box\n      component=\"section\"\n      py={verticalPadding}\n      className={\n        classes.root +\n        ` ${classes[`color${capitalize(bgColor)}`]}` +\n        (className ? ` ${className}` : \"\")\n      }\n      {...otherProps}\n    >\n      {bgImage && <BackgroundImage image={bgImage} opacity={bgImageOpacity} />}\n\n      {props.children}\n    </Box>\n  );\n}\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}